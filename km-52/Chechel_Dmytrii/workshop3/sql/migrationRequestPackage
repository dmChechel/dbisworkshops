CREATE OR REPLACE PACKAGE MIGRATION_REQUEST_PACKAGE AS
  TYPE T_MIGRATION_REQEUST IS RECORD (
  ID NUMBER,
  USER_EMAIL VARCHAR2(30 CHAR),
  TIMESTAMP DATETIME,
  DATABASE_ID NUMBER
  );

  TYPE T_MIGRATION_REQEUST_TABLE IS TABLE OF T_MIGRATION_REQEUST;

  FUNCTION GET_MIGRATION_REQUEST(MR_ID IN MIGRATION_REQUESTS.ID%TYPE)
    RETURN T_MIGRATION_REQEUST_TABLE PIPELINED;
  FUNCTION GET_MIGRATION_REQUESTS
    RETURN T_MIGRATION_REQEUST_TABLE PIPELINED;
    
 PROCEDURE CREATE_MIGRATION_REQUEST(USER_EMAIL     IN USERS.EMAIL%TYPE,
                 DATABASE_ID    IN DATABASES.ID%TYPE);
END;

CREATE OR REPLACE PACKAGE BODY MIGRATION_REQUESTS_PACKAGE AS
  FUNCTION GET_MIGRATION_REQUEST(MR_ID IN GET_MIGRATION_REQUEST.ID%type)
    RETURN GET_MIGRATION_REQUEST_TABLE PIPELINED AS
    CURSOR MY_CUR IS
      SELECT *
      FROM MIGRATION_REQUESTS
      WHERE MIGRATION_REQUESTS.ID = MR_ID;
    BEGIN
      FOR CURR IN MY_CUR
      LOOP
        PIPE ROW (CURR);
      end loop;
    END;

  FUNCTION GET_MIGRATION_REQUESTS
    RETURN T_MIGRATION_REQEUST_TABLE PIPELINED AS
    CURSOR MY_CURSOR IS
      SELECT *
      FROM MIGRATION_REQUESTS;
    BEGIN
      FOR REC IN MY_CURSOR
      LOOP
        PIPE ROW (REC);
      END LOOP;
    END;
    
    PROCEDURE CREATE_MIGRATION_REQUEST(USER_EMAIL IN USERS.EMAIL%TYPE, DATABASE_ID IN DATABASES.ID%TYPE) AS
    BEGIN
      INSERT INTO MIGRATION_REQUESTS (USER_EMAIL, DATABASE_ID) VALUES (USER_EMAIL, DATABASE_ID);
    END;
END SONG_PACKAGE;
  /
select * from table (MIGRATION_REQUEST_PACKAGE.GET_MIGRATION_REQUEST(1));
